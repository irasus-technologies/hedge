{
    "swagger": "2.0",
    "info": {
        "title": "hEdge APIs",
        "contact": {},
        "version": "v3"
    },
    "host": "localhost:48100",
    "basePath": "/hedge/",
    "paths": {
        "/api/v3/dataGenerator/commands": {
            "put": {
                "description": "You might change the average, or min, max etc depending on what you want.",
                "tags": [
                    "hedge-device-virtual - simulated data generator"
                ],
                "summary": "updates the seed data generation parameters so subsequent data values are based on new seed",
                "parameters": [
                    {
                        "description": "array of commands.",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/datagenerator.Command"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "successful"
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo": {
            "delete": {
                "description": "Clears cache of DeviceInfoService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Clearing cache of device service",
                "responses": {
                    "200": {
                        "description": "{\"message\": \"Cache cleared successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/device/name/{deviceName}": {
            "get": {
                "description": "Retrieves detailed information about a device by its name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Complete Device Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeviceObject"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Updating device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Update Complete Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deviceName",
                        "name": "deviceName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultId"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Creating complete device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Create Complete Device",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeviceObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultId"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified device",
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Delete Complete Device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device Name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/deviceprofile": {
            "get": {
                "description": "Retrieves a list of all device profiles from the metadata service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Profiles",
                "responses": {
                    "200": {
                        "description": "List of device profiles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {}
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/devices": {
            "post": {
                "description": "Retrieves a summary of the specified devices based on the provided names.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Devices Information Summary",
                "parameters": [
                    {
                        "description": "List of the names of the devices",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of devices full infos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dtos.Device"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/deviceservice": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "edgeNode",
                        "name": "edgeNode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of device services",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/deviceservice/name/{serviceName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Services by Service Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of device services",
                        "schema": {}
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/deviceservice/{serviceName}/protocols": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Service Protocols",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of device service protocols",
                        "schema": {
                            "$ref": "#/definitions/dto.DeviceServiceProtocols"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/label": {
            "get": {
                "description": "Retrieves a list of all available device labels.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Labels",
                "responses": {
                    "200": {
                        "description": "List of device labels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/label/{labelName}/devices": {
            "get": {
                "description": "Retrieves a list of devices that match the specified labels. If the `curDevice` query parameter is provided, devices associated with the current device's labels are excluded.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Retrieve Devices by Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of labels to filter devices by",
                        "name": "labelName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Current device ID to exclude devices associated with its labels",
                        "name": "curDevice",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of device names matching the labels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/metrics": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Metrics"
                ],
                "summary": "Get Metrics by Devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "list of device names",
                        "name": "devices",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics data for the specified profile",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile": {
            "get": {
                "description": "Retrieves a list of all device profile names from the metadata service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Device Profile Names",
                "responses": {
                    "200": {
                        "description": "List of device profile names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile/name/{profileName}": {
            "get": {
                "description": "Retrieving profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Get Complete Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileObject"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Updating existing profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Profile Object",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileObject"
                        }
                    },
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultId"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Profile creation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Create Complete Profile",
                "parameters": [
                    {
                        "description": "Profile Object",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileObject"
                        }
                    },
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deleting profile",
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Delete Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileObject"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile/tags": {
            "get": {
                "description": "Retrieving profile tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Get profile tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile/tags/profiles": {
            "get": {
                "description": "Retrieving profile by tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profiles"
                ],
                "summary": "Get profiles by tags",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "string collection",
                        "name": "collection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProfileObject"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile/{profileName}/devices": {
            "get": {
                "description": "Retrieves a list of devices that are associated with the specified device profile.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Devices by Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile Name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of devices associated with the profile",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/deviceinfo/profile/{profileName}/metrics": {
            "get": {
                "description": "Retrieves metrics data associated with the specified device profile.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Metrics for Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the device profile",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics data for the specified profile",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/devices": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Devices"
                ],
                "summary": "Get Devices Summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "device summary",
                        "schema": {
                            "$ref": "#/definitions/router.ResultDeviceSummary"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/association/{nodeAType}/{nodeAName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Associations"
                ],
                "summary": "Retrieve Association For A Given Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node A type",
                        "name": "nodeAType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "node A name",
                        "name": "nodeAName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.AssociationNode"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Associations"
                ],
                "summary": "Update Association For A Given Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node A type",
                        "name": "nodeAType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "node A name",
                        "name": "nodeAName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list of associated nodes",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AssociationNode"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Associations"
                ],
                "summary": "Add Association For A Given Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node A type",
                        "name": "nodeAType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "node A name",
                        "name": "nodeAName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list of associated nodes",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AssociationNode"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hedge Device Extensions - Associations"
                ],
                "summary": "Delete Association For A Given Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node A type",
                        "name": "nodeAType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "node A name",
                        "name": "nodeAName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/device/biz/{deviceName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Contextual Data"
                ],
                "summary": "Retrieve Device Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contextual data map",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Contextual Data"
                ],
                "summary": "Delete Device Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultDeviceName"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "description": "Update the implementation to automatically add contextual metadata to corresponding profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Contextual Data"
                ],
                "summary": "Update Device Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "map of device contextual data",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/device/extn/{deviceName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Extensions"
                ],
                "summary": "Retrieve Device Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.DeviceExtension"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Extensions"
                ],
                "summary": "Update Device Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of the device extensions objects",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DeviceExt"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Extensions"
                ],
                "summary": "Create Device Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of the device extensions objects",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DeviceExt"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultId"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hedge Device Extensions - Device Extensions"
                ],
                "summary": "Delete Device Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "no content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/attributes": {
            "get": {
                "description": "Retrieves combined business and extensions attribute to ease ML UI development. Output is grouped by Profile, then by contextual attr/device attributes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Attribute"
                ],
                "summary": "Retrieve attributes grouped by profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profiles=profile1,profile2; all",
                        "name": "profiles",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attributes grouped by profiles, then by contextual/device attributes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/biz/{profileName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Contextual Data"
                ],
                "summary": "Retrieve Profile Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Contextual Data"
                ],
                "summary": "Add Profile Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of the contextual attributes",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Contextual Data"
                ],
                "summary": "Delete Profile Contextual Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile name from which contextual data was removed",
                        "schema": {
                            "$ref": "#/definitions/router.ResultDeviceName"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/extn/{profileName}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Profile Extensions"
                ],
                "summary": "Retrieve Device Profile Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "will bring empty array in case no extensions found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.DeviceExtension"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Profile Extensions"
                ],
                "summary": "Update Device Profile Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "array of device extensions object",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DeviceExtension"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Device Profile Extensions"
                ],
                "summary": "Create Device Profile Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "array of device extensions object",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DeviceExtension"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ResultId"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hedge Device Extensions - Device Profile Extensions"
                ],
                "summary": "Delete Device Profile Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/relatedprofiles": {
            "get": {
                "description": "Retrieves related profiles based on 1 or more profiles that is already provided",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Attribute"
                ],
                "summary": "Retrieve related profiles' names",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profiles=profile1,profile2",
                        "name": "profiles",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Names of related profiles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/summary": {
            "get": {
                "description": "Retrieves attributes grouped by attribute, then by profile1, profile2",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Profile Attribute"
                ],
                "summary": "Retrieve profile metadata summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profiles=profile1,profile2",
                        "name": "profiles",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProfileSummary objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.ProfileSummary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/deviceprofile/{profileName}/downsampling/config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Downsampling"
                ],
                "summary": "Retrieve Downsampling configuration for a given profile name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DownsamplingConfig"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "If there is Downsampling Config present, it will replace the existing config during update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Downsampling"
                ],
                "summary": "Update Downsampling Config for existing profile",
                "parameters": [
                    {
                        "description": "list of node raw data configurations",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DownsamplingConfig"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "description": "Adds or updates an Aggregate functions. Here old data is not deleted; if it exists, we update it, otherwise we delete it",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Downsampling"
                ],
                "summary": "Update Aggregate Function Definition",
                "parameters": [
                    {
                        "description": "list of node raw data configurations",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DownsamplingConfig"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "profile name",
                        "name": "profileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/location": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Location"
                ],
                "summary": "Add Location",
                "parameters": [
                    {
                        "description": "location",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "map of locations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/metadata/location/{locationId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Location"
                ],
                "summary": "Get Location by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location object",
                        "schema": {
                            "$ref": "#/definitions/dto.Location"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm": {
            "put": {
                "description": "Updates an existing machine learning training algorithm.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Update Algorithm",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Whether to regenerate the digest for the updated algorithm.",
                        "name": "generateDigest",
                        "in": "query"
                    },
                    {
                        "description": "Updated algorithm definition details.",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLAlgorithmDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Algorithm successfully updated."
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Registers a new machine learning training algorithm.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Create and Register Algorithm",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Whether to generate a digest for the algorithm.",
                        "name": "generateDigest",
                        "in": "query"
                    },
                    {
                        "description": "Algorithm definition details.",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLAlgorithmDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Algorithm successfully created."
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/config": {
            "put": {
                "description": "Updates an existing machine learning model configuration. This endpoint accepts an updated configuration for an existing ML model, performs validation, and saves the updated configuration.",
                "tags": [
                    "ML Management - Model Configurations"
                ],
                "summary": "Update ML Model Configuration",
                "parameters": [
                    {
                        "description": "Updated ML Model Configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLModelConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Sample size for training. Defaults to 100.",
                        "name": "sampleSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Flag indicating whether to generate a preview of the training sample. Accepts 'true' or 'yes'.",
                        "name": "generatePreview",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ML model configuration successfully updated.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a new machine learning model configuration. This endpoint accepts a configuration for a new ML model, performs validation, checks for existing configurations, and then saves it.",
                "tags": [
                    "ML Management - Model Configurations"
                ],
                "summary": "Create ML Model Configuration",
                "parameters": [
                    {
                        "description": "ML Model Configuration to be created",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLModelConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Sample size to be used for training. Defaults to 100.",
                        "name": "sampleSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Flag to indicate if a preview training sample should be generated. Accepts 'true' or 'yes'.",
                        "name": "generatePreview",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ML model configuration successfully created.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/data/template": {
            "get": {
                "description": "Retrieve a template for prediction data based on the specified algorithm type.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Get Prediction Template By Type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of the algorithm for which the prediction template is being requested.",
                        "name": "algorithmType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prediction template details.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/config.PredictionPayloadTemplate"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/data/types": {
            "get": {
                "description": "Retrieve a list of supported machine learning algorithm types.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Get Algorithm Types",
                "responses": {
                    "200": {
                        "description": "List of supported algorithm types.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/{algorithmName}": {
            "get": {
                "description": "Retrieves detailed information about a specific Machine Learning algorithm by its name.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Get Algorithm by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Algorithm Name",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Summary Only",
                        "name": "summaryOnly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Algorithm details",
                        "schema": {
                            "$ref": "#/definitions/config.MLAlgorithmDefinition"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deletes a machine learning algorithm by its name.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Delete Algorithm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the algorithm to delete.",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Algorithm successfully deleted.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/{algorithmName}/config/{mlModelConfigName}": {
            "get": {
                "description": "Fetches the configuration for a specific machine learning model by algorithm name and model configuration name.",
                "tags": [
                    "ML Management - Model Configurations"
                ],
                "summary": "Get ML Model Configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the algorithm for which the model configuration is being requested.",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the machine learning model configuration to retrieve.",
                        "name": "mlModelConfigName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Summary Only",
                        "name": "summaryOnly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested ML model configuration",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/config.MLModelConfig"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific machine learning model configuration by algorithm name and model configuration name.",
                "tags": [
                    "ML Management - Model Configurations"
                ],
                "summary": "Delete ML Model Configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the algorithm for which the model configuration will be deleted.",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the machine learning model configuration to be deleted.",
                        "name": "mlModelConfigName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model configuration deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/{algorithmName}/port": {
            "get": {
                "description": "Retrieve the prediction port associated with a specific machine learning algorithm.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Get Algorithm Prediction Port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the algorithm whose prediction port is being retrieved.",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prediction port details.",
                        "schema": {
                            "$ref": "#/definitions/router.PredictionPortResponse"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/algorithm/{algorithmName}/status": {
            "patch": {
                "description": "Enables or disables a machine learning algorithm by its name.",
                "tags": [
                    "ML Management - Algorithms"
                ],
                "summary": "Change Algorithm Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the algorithm to update the status for.",
                        "name": "algorithmName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Boolean indicating whether to enable or disable the algorithm.",
                        "name": "isEnabled",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Algorithm status successfully updated.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/event_config": {
            "get": {
                "description": "Fetches the event configuration for a specific ML model configuration, algorithm, and event.",
                "tags": [
                    "ML Management - Event Configuration"
                ],
                "summary": "Get ML Event Configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ML Model Configuration Name (required)",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ML Algorithm Name (required)",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The Event Name (required)",
                        "name": "eventName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ML Event Configuration",
                        "schema": {
                            "$ref": "#/definitions/config.MLEventConfig"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Creates and adds a new Machine Learning event configuration. This configures a specific event for a given ML model and algorithm.",
                "tags": [
                    "ML Management - Event Configuration"
                ],
                "summary": "Add Machine Learning Event Configuration",
                "parameters": [
                    {
                        "description": "Machine Learning Event Configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLEventConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ML Event Configuration created successfully",
                        "schema": {
                            "$ref": "#/definitions/config.MLEventConfig"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific Machine Learning event configuration based on provided ML model configuration name, algorithm, and event name.",
                "tags": [
                    "ML Management - Event Configuration"
                ],
                "summary": "Delete Machine Learning Event Configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ML Model Configuration Name",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ML Algorithm",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Name",
                        "name": "eventName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ML Event Configuration deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/event_config/{eventName}": {
            "put": {
                "description": "Updates an existing Machine Learning event configuration for a given ML model and event name. This allows modification of an existing event configuration.",
                "tags": [
                    "ML Management - Event Configuration"
                ],
                "summary": "Update Machine Learning Event Configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Name",
                        "name": "eventName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Machine Learning Event Configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MLEventConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ML Event Configuration updated successfully",
                        "schema": {
                            "$ref": "#/definitions/config.MLEventConfig"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/model": {
            "get": {
                "description": "Retrieves a list of trained models, optionally filtered by algorithm, configuration name, or version preference.",
                "tags": [
                    "ML Management - Models"
                ],
                "summary": "Get Trained Models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by ML algorithm name",
                        "name": "mlAlgorithm",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ML Model configuration name",
                        "name": "mlModelConfigName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Retrieve only the latest versions (default: true)",
                        "name": "latestVersionsOnly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trained models",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ml_model.MLModel"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/model/modelFile": {
            "get": {
                "description": "Downloads a trained model file based on the provided ML model configuration and algorithm.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "ML Management - Models"
                ],
                "summary": "Download Trained Model File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ML Model Configuration Name (required)",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ML Algorithm Name (required)",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Binary file of the trained model"
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Uploads a trained model file and registers it with the specified training job and model configuration.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ML Management - Model"
                ],
                "summary": "Upload and Register Trained Model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model Configuration Name",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ML Algorithm",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "jobName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Trained model file to upload and register",
                        "name": "modelFile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Model uploaded and registered successfully"
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/model_deployment": {
            "get": {
                "description": "Retrieves the status of model deployments for a specific ML model configuration and algorithm.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ML Management - Model Deployment"
                ],
                "summary": "Get Model Deployment Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ML Model Configuration Name (required)",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ML Algorithm Name (required)",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by deployment status (optional)",
                        "name": "deploymentStatus",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Group deployment status by nodes (default: true)",
                        "name": "groupByNodes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of model deployment statuses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ml_model.ModelDeploymentStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Deploys or undeploys a trained Machine Learning model to target nodes based on the provided deployment command.",
                "tags": [
                    "ML Management - Model Deployment"
                ],
                "summary": "Deploy or Undeploy Machine Learning Model",
                "parameters": [
                    {
                        "description": "Model Deployment Command",
                        "name": "modelDeployCommand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ml_model.ModelDeployCommand"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Model deployment request accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data": {
            "get": {
                "description": "Retrieves a specific training data sample. This endpoint returns the details of the training data sample that was created.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Get Training Data Sample",
                "responses": {
                    "200": {
                        "description": "The details of the training data sample",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data/export": {
            "get": {
                "description": "Retrieves the exported training data for a specific model configuration and algorithm. Can be used to download the export or view export details.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Get Training Data Export",
                "responses": {
                    "200": {
                        "description": "Training data export file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Creates an asynchronous training data export for the specified machine learning model configuration and algorithm.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Generate a new training data file so it can be downloaded later",
                "parameters": [
                    {
                        "description": "Job submission details for creating the training data export",
                        "name": "jobSubmissionDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/job.JobSubmissionDetails"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "Flag to indicate whether only the configuration should be generated, without the actual training data export.",
                        "name": "generateConfigOnly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Training data export request accepted and being processed asynchronously.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data/export/status": {
            "get": {
                "description": "Retrieves the status of a training data export job. Can be used to check the progress or completion of a previously requested export job.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Get Training Data Export Status",
                "responses": {
                    "200": {
                        "description": "Returns the status of the training data export job",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data/sample": {
            "post": {
                "description": "Creates a sample of training data for a specific ML algorithm and model configuration. This request is asynchronous, and the training data sample creation will be processed in the background.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Create Training Data Sample",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the machine learning model configuration",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the machine learning algorithm",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Size of the training data sample to create (default is 100)",
                        "name": "sampleSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted, the request to create the sample has been accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data/status": {
            "get": {
                "description": "Retrieves the current status of a training data sample process. This endpoint is used to check if the sample creation process has completed or is still running.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Get Training Data Sample Status",
                "responses": {
                    "200": {
                        "description": "Status of the training data sample process",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_data/validate": {
            "post": {
                "description": "Uploads and validates training data for a given machine learning model configuration and algorithm.",
                "tags": [
                    "ML Management - Training Data"
                ],
                "summary": "Upload and Validate Training Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the ML model configuration to associate with the training data.",
                        "name": "mlModelConfigName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the machine learning algorithm to be used for validation.",
                        "name": "mlAlgorithm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Training data file to be uploaded and validated.",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Training data successfully uploaded and validated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_job": {
            "get": {
                "description": "Retrieves a list of training job summaries, optionally filtered by algorithm, job status, or model configuration name.",
                "tags": [
                    "ML Management - Training Jobs"
                ],
                "summary": "Get Training Jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by algorithm name",
                        "name": "algorithm",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by job status (e.g., completed, running)",
                        "name": "jobStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ML Model configuration name",
                        "name": "mlModelConfigName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include related deployment status for each training job (default: false)",
                        "name": "includeDeployments",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of training jobs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/job.TrainingJobSummary"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Submits a new training job to the system for execution. The request body should contain the details of the job, including the algorithm and model configuration. The job is validated and then submitted to the training system.",
                "tags": [
                    "ML Management - Training Job"
                ],
                "summary": "Submit a Training Job",
                "parameters": [
                    {
                        "description": "Details of the training job to be submitted",
                        "name": "jobSubmissionDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/job.JobSubmissionDetails"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted, job submitted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/training_job/{jobName}": {
            "delete": {
                "description": "Deletes a specific training job by its name. This operation will remove the job and its associated data. The request requires the job name as a parameter in the URL.",
                "tags": [
                    "ML Management - Training Job"
                ],
                "summary": "Delete a Training Job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the training job to be deleted",
                        "name": "jobName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the training job",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/ml_management/tsdata/label/{label}": {
            "get": {
                "description": "Fetches time series labels for a given label identifier.",
                "tags": [
                    "ML Management - Time Series Data"
                ],
                "summary": "Get Time Series Labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label identifier",
                        "name": "label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of time series labels",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "417": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/node_mgmt/downsampling/rawdata": {
            "put": {
                "description": "If there are NodeRawDataConfigs present, it will replace each existing config in case it was changed or add new one in case it doesn't exist yet",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Hedge Device Extensions - Node Raw Data Configuration"
                ],
                "summary": "Update Node RawData Configuration",
                "parameters": [
                    {
                        "description": "list of node raw data configurations",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.NodeRawDataConfig"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "409": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/resource": {
            "post": {
                "description": "Multiple metric values can be ingested at once, origin can be optionally specified in microseconds",
                "tags": [
                    "hedge-device-virtual"
                ],
                "summary": "ingest the specified machine or sensor data for the device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device Name",
                        "name": "deviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReadingData",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/driver.ReadingData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/twin/definition": {
            "put": {
                "description": "The template definition that is created is used to create ML model that gets used for training",
                "tags": [
                    "DigitalTwin - Simulations"
                ],
                "summary": "Updates the existing Digital Definition template. This template is a wrapper around a Simulation ML model",
                "parameters": [
                    {
                        "description": "Digital Twin Definition details.",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/twin.DigitalTwinDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "DigitalTwin successfully created."
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "The template definition that is created is used to create ML model that gets used for training",
                "tags": [
                    "DigitalTwin - Simulations"
                ],
                "summary": "Create a new Digital Definition template. This template is a wrapper around a Simulation ML model",
                "parameters": [
                    {
                        "description": "Digital Twin Definition details.",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/twin.DigitalTwinDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "DigitalTwin successfully created."
                    },
                    "400": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/twin/definition/all": {
            "get": {
                "description": "Should get the summary view which is yet to be implemented",
                "tags": [
                    "DigitalTwin - Simulations"
                ],
                "summary": "Get all Digital Twin Definitions.",
                "responses": {
                    "200": {
                        "description": "Digital Twin Definition deleted successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/twin.DigitalTwinDefinition"
                            }
                        }
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v3/twin/definition/name/{digitalTwinDefinitionName}": {
            "get": {
                "description": "The template definition that is fetched is used to create ML model that gets used for training",
                "tags": [
                    "DigitalTwin - Simulations"
                ],
                "summary": "Gets the Digital Definition template. This template is a wrapper around a Simulation ML model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "digitalTwinDefinition Name",
                        "name": "digitalTwinDefinitionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Digital Twin Definition details",
                        "schema": {
                            "$ref": "#/definitions/twin.DigitalTwinDefinition"
                        }
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "The template definition that is fetched is used to create ML model that gets used for training",
                "tags": [
                    "DigitalTwin - Simulations"
                ],
                "summary": "Delete the Digital Definition template. This template is a wrapper around a Simulation ML model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "digitalTwinDefinition Name",
                        "name": "digitalTwinDefinitionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Digital Twin Definition deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/twin.DigitalTwinDefinition"
                        }
                    },
                    "404": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    },
                    "500": {
                        "description": "{\"message\":\"Error message\"}",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Condition": {
            "type": "object",
            "required": [
                "severityLevel",
                "thresholdsDefinitions"
            ],
            "properties": {
                "severityLevel": {
                    "description": "CRITICAL, MAJOR, MINOR",
                    "type": "string"
                },
                "thresholdsDefinitions": {
                    "description": "All the parts of condition",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.ThresholdDefinition"
                    }
                }
            }
        },
        "config.DigitalTwinParameterType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "Input": "1",
                "OperatingMetric": "0",
                "Output": "2"
            },
            "x-enum-varnames": [
                "OperatingMetric",
                "Input",
                "ExternalInput",
                "Output"
            ]
        },
        "config.Feature": {
            "type": "object",
            "properties": {
                "deviceSelector": {
                    "description": "In case there are multiple devices for the same profile, we need a way to decide which device to consider\nThis applies when EntityType=deviceLabels or EntityType=digitalTwin\nThe value part of the FilterDefinition will be used to name the column to make it unique\nFilterDefinition is to be provided by digital twin author or ML user when we create MLModel Configuration\nNot an array right now to make it simple",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.FilterDefinition"
                        }
                    ]
                },
                "digitalTwinParameterType": {
                    "description": "INPUT, OUTPUT, OPERATING_METRICS",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.DigitalTwinParameterType"
                        }
                    ]
                },
                "fromExternalDataSource": {
                    "description": "if external or user configurable, needs to be provided by user after downloading and uploading in case of training",
                    "type": "boolean",
                    "default": false
                },
                "isInput": {
                    "description": "Units              string `json:\"units,omitempty\"`",
                    "type": "boolean"
                },
                "isOutput": {
                    "description": "In case of timeseries forcasting the same metric can be input as well as output",
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "description": "METRIC, CATEGORICAL, TIMESTAMP",
                    "type": "string",
                    "default": "METRIC"
                }
            }
        },
        "config.FilterDefinition": {
            "type": "object",
            "required": [
                "label",
                "operator",
                "value"
            ],
            "properties": {
                "label": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "description": "profile1: [meta1, meta2], profile2: [meta21, meta22]",
                    "type": "string"
                }
            }
        },
        "config.MLAlgorithmDefinition": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "allowDeploymentAtEdge": {
                    "type": "boolean",
                    "default": true
                },
                "autoEventGenerationRequired": {
                    "description": "For AutoEncoder running at edge we need AutoEventGeneration while for simulation we might not need it",
                    "type": "boolean"
                },
                "defaultPredictionEndpointUrl": {
                    "description": "Optional and can be overridden at the time of deployment in MLModelDeployment",
                    "type": "string"
                },
                "defaultPredictionPort": {
                    "description": "DefaultPredictionPort is allocated at the time of creating the algo name\nAllocation is done after scanning the existing algos and providing the next available number",
                    "type": "integer"
                },
                "deprecatedPredictionImageDigest": {
                    "type": "string"
                },
                "deprecatedTrainerImageDigest": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "description": "true, false",
                    "type": "boolean"
                },
                "groupByAttributesRequired": {
                    "description": "The below is required to support time-series prediction",
                    "type": "boolean"
                },
                "hyperParameters": {
                    "description": "Custom parameters that could be provided for using in the input payload for prediction endpoint",
                    "type": "object",
                    "additionalProperties": true
                },
                "isDeploymentExternal": {
                    "type": "boolean"
                },
                "isOotb": {
                    "description": "Is the algorithm out of the box (builtin within hedge product package)",
                    "type": "boolean",
                    "default": false
                },
                "isPredictionRealTime": {
                    "description": "Whether prediction is real time or is it scheduled, we might need scheduled in case of scheduled to handle potential compute optimization",
                    "type": "boolean"
                },
                "isTrainingExternal": {
                    "type": "boolean"
                },
                "lastApprovedBy": {
                    "type": "string"
                },
                "name": {
                    "description": "Algo name",
                    "type": "string",
                    "maxLength": 200
                },
                "outputFeaturesPredefined": {
                    "description": "true, false",
                    "type": "boolean"
                },
                "predictionImageDigest": {
                    "type": "string"
                },
                "predictionImagePath": {
                    "description": "Prediction image path \u0026 Digest",
                    "type": "string"
                },
                "predictionName": {
                    "type": "string"
                },
                "predictionOutputKeys": {
                    "description": "We assume that the output of prediction will be a map, so we can scan the keys and get the values from prediction",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "predictionPayloadTemplate": {
                    "$ref": "#/definitions/config.PredictionPayloadTemplate"
                },
                "publishPredictionsRequired": {
                    "type": "boolean"
                },
                "requiresDataPipeline": {
                    "type": "boolean"
                },
                "thresholdUserParameters": {
                    "description": "User defined parameter map ( eg HighSeverityEventLowerBound)",
                    "type": "object",
                    "additionalProperties": true
                },
                "timeStampAttributeRequired": {
                    "description": "The below is required to support time-series prediction for simulation, possibly the Algo (GluonTS uses this somewhere)",
                    "type": "boolean"
                },
                "trainerImageDigest": {
                    "type": "string"
                },
                "trainerImagePath": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "config.MLEventConfig": {
            "type": "object",
            "required": [
                "description",
                "eventName",
                "mlAlgorithm",
                "mlModelConfigName",
                "stabilizationPeriodByCount"
            ],
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Condition"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 200
                },
                "eventName": {
                    "type": "string",
                    "maxLength": 200
                },
                "mlAlgorithm": {
                    "type": "string",
                    "maxLength": 200
                },
                "mlAlgorithmType": {
                    "type": "string"
                },
                "mlModelConfigName": {
                    "description": "foreign key refers to trainingConfig against which the training is being performed",
                    "type": "string",
                    "maxLength": 200
                },
                "stabilizationPeriodByCount": {
                    "type": "integer"
                }
            }
        },
        "config.MLModelConfig": {
            "type": "object",
            "required": [
                "mlDataSourceConfig",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "description": "true, false",
                    "type": "boolean",
                    "default": true
                },
                "localModelStorageDir": {
                    "description": "LocalModelStorageDir and TrainingImagePath are part of MLModel that is created after training,\nhowever, we still keep here since the image that is used for training might get updated after the training\nWe can store MLAlgoConfig also in mlModel, but we will need to take special care so we don't store in redis",
                    "type": "string"
                },
                "message": {
                    "description": "default message that can have placeholders for runtime parameters from device labels/tags {{.deviceName}}",
                    "type": "string"
                },
                "mlAlgorithm": {
                    "description": "Refers to name in MLAlgorithmDefinition",
                    "type": "string",
                    "maxLength": 300
                },
                "mlAlgorithmType": {
                    "type": "string"
                },
                "mlDataSourceConfig": {
                    "$ref": "#/definitions/config.MLModelDataConfig"
                },
                "modelConfigVersion": {
                    "description": "ModelConfigVersion is the running counter that should get incremented after feature definitions are changed with trained ml_model even if the mlModel config is changed later",
                    "type": "integer"
                },
                "modified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200
                },
                "trainedModelCount": {
                    "type": "integer"
                },
                "version": {
                    "description": "Only for readability",
                    "type": "string"
                }
            }
        },
        "config.MLModelDataConfig": {
            "type": "object",
            "required": [
                "featuresByProfile"
            ],
            "properties": {
                "deviceSelectionFilterByProfile": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.FilterDefinition"
                    }
                },
                "entityName": {
                    "description": "If EntityType=digitalTwin, then EntityName=WindturbineTwin,\nif EntityType=deviceLabels, EntityName = PlantArea, ( to be derived from GroupOrJoinKeys =\u003eConcate if multiple\nif EntityType=deviceName, EntityName=profileName =\u003e derive when only one profile",
                    "type": "string"
                },
                "entityType": {
                    "description": "Feature list in here while datasource to pull from in MLDataSourceConfig\nHelps with filtering and in UI to select the metrics from\nStarting entity to help users to start configuring the features for training or to use to filter our the topic during prediction\nEntityType can be deviceName, labels or DigitalTwin",
                    "type": "string",
                    "default": "Profile"
                },
                "externalFeatures": {
                    "description": "Below is placeholder to get labelled/derived data, so need to also add transform function if it is input feature",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Feature"
                    }
                },
                "featureNameToColumnIndex": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "featuresByProfile": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/config.Feature"
                        }
                    }
                },
                "groupOrJoinKeys": {
                    "description": "If EntityType=digitalTwin, then GroupOrJoinKeys=twinId/NA since we get explicit deviceNames\nif EntityType=deviceLabels, GroupOrJoinKeys = [PlantArea]\nif EntityType=deviceName, GroupOrJoinKeys=[deviceName]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inputContextCount": {
                    "type": "integer"
                },
                "outputPredictionCount": {
                    "description": "The below 2 OutputPredictionCount and InputContextCount are required for timeseries",
                    "type": "integer"
                },
                "predictionDataSourceConfig": {
                    "$ref": "#/definitions/config.PredictionDataSourceConfig"
                },
                "primaryProfile": {
                    "type": "string"
                },
                "supportSlidingWindow": {
                    "description": "Experimental start, necessitated after checking NG data",
                    "type": "boolean",
                    "default": true
                },
                "trainingDataSourceConfig": {
                    "$ref": "#/definitions/config.TrainingDataSourceConfig"
                }
            }
        },
        "config.PredictionDataSourceConfig": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.FilterDefinition"
                    }
                },
                "predictionEndPointURL": {
                    "type": "string"
                },
                "samplingIntervalSecs": {
                    "description": "Need to keep one of PredictionRateSecs or SamplingIntervalSecs\nPredictionRateSecs          int64              `json:\"predictionRateSecs\" validate:\"gt=0,required\" default:\"30\"`",
                    "type": "integer"
                },
                "streamType": {
                    "description": "Valid streamType is redis or MQTT",
                    "type": "string",
                    "default": "redis"
                },
                "topicName": {
                    "type": "string"
                }
            }
        },
        "config.PredictionPayloadTemplate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "payloadSample": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "config.ThresholdDefinition": {
            "type": "object",
            "required": [
                "operator"
            ],
            "properties": {
                "label": {
                    "description": "Anomaly: \"Prediction\", Classification: class name (categorical value), Timeseries: metric name",
                    "type": "string"
                },
                "lowerThreshold": {
                    "description": "for BETWEEN operator: \u003e=",
                    "type": "number"
                },
                "operator": {
                    "description": "BETWEEN, EQUAL_TO, GREATER_THAN, LESS_THAN",
                    "type": "string"
                },
                "thresholdValue": {
                    "description": "string for EQUAL_TO, float64 for GREATER_THAN, LESS_THAN"
                },
                "upperThreshold": {
                    "description": "for BETWEEN operator: \u003c",
                    "type": "number"
                }
            }
        },
        "config.TrainingDataSourceConfig": {
            "type": "object",
            "required": [
                "dataCollectionTotalDurationSec",
                "samplingIntervalSecs"
            ],
            "properties": {
                "dataCollectionTotalDurationSec": {
                    "type": "integer"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.FilterDefinition"
                    }
                },
                "samplingIntervalSecs": {
                    "type": "integer"
                }
            }
        },
        "datagenerator.Command": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "driver.Reading": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "origin": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "value": {}
            }
        },
        "driver.ReadingData": {
            "type": "object",
            "properties": {
                "readings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/driver.Reading"
                    }
                }
            }
        },
        "dto.Aggregate": {
            "type": "object",
            "properties": {
                "functionName": {
                    "type": "string"
                },
                "groupBy": {
                    "type": "string"
                },
                "samplingIntervalSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.AssociationNode": {
            "type": "object",
            "properties": {
                "nodeName": {
                    "type": "string"
                },
                "nodeType": {
                    "type": "string"
                }
            }
        },
        "dto.DeviceExt": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.DeviceExtResp": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "isMandatory": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.DeviceExtension": {
            "type": "object",
            "properties": {
                "default": {
                    "description": "Consider adding a Type field in future so UI can render the entry field correctly\nFor now, all are Text fields",
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "isMandatory": {
                    "type": "boolean"
                }
            }
        },
        "dto.DeviceObject": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "associations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AssociationNode"
                    }
                },
                "contextualAttributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "device": {
                    "$ref": "#/definitions/dtos.Device"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DeviceExtResp"
                    }
                },
                "node": {
                    "$ref": "#/definitions/dto.Node"
                }
            }
        },
        "dto.DeviceProtocol": {
            "type": "object",
            "properties": {
                "protocolName": {
                    "type": "string"
                },
                "protocolProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.DeviceServiceProtocols": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/dto.DeviceProtocol"
                }
            }
        },
        "dto.DeviceSummary": {
            "type": "object",
            "properties": {
                "deviceService": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/dto.Location"
                },
                "name": {
                    "type": "string"
                },
                "node": {
                    "$ref": "#/definitions/dto.Node"
                },
                "operatingState": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                }
            }
        },
        "dto.DownsamplingConfig": {
            "type": "object",
            "properties": {
                "aggregates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Aggregate"
                    }
                },
                "defaultDataCollectionIntervalSecs": {
                    "type": "integer"
                },
                "defaultDownsamplingIntervalSecs": {
                    "type": "integer"
                }
            }
        },
        "dto.Location": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "dto.Node": {
            "type": "object",
            "properties": {
                "hostName": {
                    "description": "hostName can change, nodeId cannot change, use hostName instead of nodeId in UI",
                    "type": "string"
                },
                "isRemoteHost": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nodeId": {
                    "description": "NodeId is the actual node IP/domain name that cane be used to URLs to build the actual URL",
                    "type": "string"
                },
                "ruleEndPoint": {
                    "description": "ruleEndPoint: /hedge/api/v3/rules/{hostName}",
                    "type": "string"
                },
                "workflowEndPoint": {
                    "description": "WorkflowEndPoint: /hedge/hedge-node-red/{hostName}",
                    "type": "string"
                }
            }
        },
        "dto.NodeHost": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                }
            }
        },
        "dto.NodeRawDataConfig": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "node": {
                    "description": "nodeID is a key",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.NodeHost"
                        }
                    ]
                },
                "sendRawData": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "integer"
                }
            }
        },
        "dto.Page": {
            "type": "object",
            "properties": {
                "Page": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "dto.ProfileObject": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "contextualAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DeviceExtension"
                    }
                },
                "downsamplingConfig": {
                    "$ref": "#/definitions/dto.DownsamplingConfig"
                },
                "profile": {
                    "$ref": "#/definitions/dtos.DeviceProfile"
                }
            }
        },
        "dto.ProfileSummary": {
            "type": "object",
            "properties": {
                "contextualAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "deviceAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metricNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.AutoEvent": {
            "type": "object",
            "required": [
                "interval",
                "sourceName"
            ],
            "properties": {
                "interval": {
                    "type": "string"
                },
                "onChange": {
                    "type": "boolean"
                },
                "sourceName": {
                    "type": "string"
                }
            }
        },
        "dtos.Device": {
            "type": "object",
            "required": [
                "name",
                "profileName",
                "protocols",
                "serviceName"
            ],
            "properties": {
                "adminState": {
                    "type": "string",
                    "enum": [
                        "LOCKED",
                        "UNLOCKED"
                    ]
                },
                "autoEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.AutoEvent"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {},
                "modified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operatingState": {
                    "type": "string",
                    "enum": [
                        "UP",
                        "DOWN",
                        "UNKNOWN"
                    ]
                },
                "profileName": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "protocols": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dtos.ProtocolProperties"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "dtos.DeviceCommand": {
            "type": "object",
            "required": [
                "name",
                "readWrite"
            ],
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "readWrite": {
                    "type": "string",
                    "enum": [
                        "R",
                        "W",
                        "RW",
                        "WR"
                    ]
                },
                "resourceOperations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ResourceOperation"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "dtos.DeviceProfile": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "deviceCommands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.DeviceCommand"
                    }
                },
                "deviceResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.DeviceResource"
                    }
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "modified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.DeviceResource": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "description": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/dtos.ResourceProperties"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "dtos.ProtocolProperties": {
            "type": "object",
            "additionalProperties": {}
        },
        "dtos.ResourceOperation": {
            "type": "object",
            "required": [
                "deviceResource"
            ],
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "deviceResource": {
                    "description": "The replacement of Object field",
                    "type": "string"
                },
                "mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.ResourceProperties": {
            "type": "object",
            "required": [
                "readWrite",
                "valueType"
            ],
            "properties": {
                "assertion": {
                    "type": "string"
                },
                "base": {
                    "type": "number"
                },
                "defaultValue": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer"
                },
                "maximum": {
                    "type": "number"
                },
                "mediaType": {
                    "type": "string"
                },
                "minimum": {
                    "type": "number"
                },
                "offset": {
                    "type": "number"
                },
                "optional": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "readWrite": {
                    "type": "string",
                    "enum": [
                        "R",
                        "W",
                        "RW",
                        "WR"
                    ]
                },
                "scale": {
                    "type": "number"
                },
                "shift": {
                    "type": "integer"
                },
                "units": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "job.JobSubmissionDetails": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "mlAlgorithm": {
                    "type": "string"
                },
                "mlModelConfigName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifyOnCompletion": {
                    "type": "boolean"
                },
                "simulationDefinitionName": {
                    "description": "TODO: Vijay, Consider removing SimulationDefinitionName, so far didn't find any use for it",
                    "type": "string"
                },
                "useUploadedData": {
                    "type": "boolean"
                }
            }
        },
        "job.TrainingJobSummary": {
            "type": "object",
            "properties": {
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ml_model.ModelDeploymentStatus"
                    }
                },
                "endTime": {
                    "type": "integer"
                },
                "estimatedDuration": {
                    "type": "integer"
                },
                "mlAlgorithm": {
                    "type": "string"
                },
                "mlModelConfigName": {
                    "type": "string"
                },
                "modelNameVersion": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "trainingProviderName": {
                    "type": "string"
                }
            }
        },
        "ml_model.MLModel": {
            "type": "object",
            "properties": {
                "ModelCreatedTimeMs": {
                    "type": "integer"
                },
                "isModelDeprecated": {
                    "type": "boolean"
                },
                "mlAlgorithm": {
                    "type": "string"
                },
                "mlModelConfigName": {
                    "description": "foreign key refers to trainingConfig against which the training is being performed",
                    "type": "string"
                },
                "modelName": {
                    "description": "modelName to be generated algo+config+version",
                    "type": "string"
                },
                "modelPath": {
                    "description": "local model storage path",
                    "type": "string"
                },
                "modelVersion": {
                    "type": "integer"
                }
            }
        },
        "ml_model.ModelDeployCommand": {
            "type": "object",
            "properties": {
                "MLModelConfigName": {
                    "type": "string"
                },
                "algorithm": {
                    "$ref": "#/definitions/config.MLAlgorithmDefinition"
                },
                "commandName": {
                    "description": "Valid values are Deploy or UnDeploy, UpdateMLEventConfig",
                    "type": "string"
                },
                "mlAlgorithm": {
                    "type": "string"
                },
                "mlEventConfigsToSync": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ml_model.SyncMLEventConfig"
                    }
                },
                "modelAvailableDate": {
                    "type": "integer"
                },
                "modelName": {
                    "type": "string"
                },
                "modelVersion": {
                    "type": "integer"
                },
                "targetNodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ml_model.ModelDeployStatusCode": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
            ],
            "x-enum-comments": {
                "ModelEndOfLife": "When the trained model never got deployed and was replaced by new training model"
            },
            "x-enum-varnames": [
                "ReadyToDeploy",
                "PublishedDeployCommand",
                "PublishedUnDeployCommand",
                "ModelUnDeployed",
                "ModelDeployed",
                "ModelEventConfigSyncSuccess",
                "ModelUnDeploymentFailed",
                "ModelDeploymentFailed",
                "ModelEventConfigSyncFailed",
                "ModelEndOfLife"
            ]
        },
        "ml_model.ModelDeploymentStatus": {
            "type": "object",
            "properties": {
                "deployedContainerName": {
                    "type": "string"
                },
                "deploymentStatus": {
                    "type": "string"
                },
                "deploymentStatusCode": {
                    "$ref": "#/definitions/ml_model.ModelDeployStatusCode"
                },
                "isModelDeprecated": {
                    "type": "boolean"
                },
                "message": {
                    "description": "To contain the error message when there is deployment failure",
                    "type": "string"
                },
                "mlAlgorithm": {
                    "type": "string"
                },
                "mlModelConfigName": {
                    "type": "string"
                },
                "modelDeploymentTimeMs": {
                    "type": "integer"
                },
                "modelName": {
                    "description": "Refers to the MLModel key",
                    "type": "string"
                },
                "modelVersion": {
                    "type": "integer"
                },
                "nodeDisplayName": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "permittedOption": {
                    "description": "Allowed values are deploy, undeploy or none",
                    "type": "string"
                }
            }
        },
        "ml_model.SyncMLEventConfig": {
            "type": "object",
            "properties": {
                "mlEventConfig": {
                    "$ref": "#/definitions/config.MLEventConfig"
                },
                "oldMlEventConfig": {
                    "$ref": "#/definitions/config.MLEventConfig"
                },
                "syncCommand": {
                    "type": "string"
                }
            }
        },
        "router.PredictionPortResponse": {
            "type": "object",
            "properties": {
                "portNo": {
                    "type": "integer"
                }
            }
        },
        "router.ResultDeviceName": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                }
            }
        },
        "router.ResultDeviceSummary": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DeviceSummary"
                    }
                },
                "page": {
                    "$ref": "#/definitions/dto.Page"
                }
            }
        },
        "router.ResultId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "twin.Connection": {
            "type": "object",
            "properties": {
                "connectionType": {
                    "$ref": "#/definitions/twin.ConnectionType"
                },
                "fromTwin": {
                    "type": "string"
                },
                "parameters": {
                    "description": "FromTwin 2 TargetTwin Parameter Map",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "targetTwin": {
                    "type": "string"
                }
            }
        },
        "twin.ConnectionType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "ConnectionTypeHierarchy",
                "ConnectionTypeDirect"
            ]
        },
        "twin.DigitalTwinDefinition": {
            "type": "object",
            "properties": {
                "connections": {
                    "description": "Connections can be kept in here if the ML training and prediction for each connected\ntwin is separate",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/twin.Connection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "entities": {
                    "description": "Add reference to scenes in here, 1 or more of them can be referred in here\n\nEntities and ExternalParameters should be removed",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/twin.Entity"
                    }
                },
                "externalParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/twin.ExternalParameter"
                    }
                },
                "mlModelConfig": {
                    "description": "New approach is to define simulation as MLModelDefinition, this should ease training and predictions",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.MLModelConfig"
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/twin.StatusType"
                }
            }
        },
        "twin.Entity": {
            "type": "object",
            "properties": {
                "entityType": {
                    "$ref": "#/definitions/twin.EntityType"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "twin.EntityType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Device",
                "Twin"
            ]
        },
        "twin.ExternalParameter": {
            "type": "object",
            "properties": {
                "isInput": {
                    "description": "Units              string `json:\"units,omitempty\"`",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "range": {
                    "$ref": "#/definitions/twin.Range"
                },
                "type": {
                    "description": "METRIC, METADATA",
                    "type": "string",
                    "default": "METRIC"
                }
            }
        },
        "twin.Range": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "twin.StatusType": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "StatusTypeEnabled",
                "StatusTypeDisabled"
            ]
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "BasicAuth": []
        }
    ]
}