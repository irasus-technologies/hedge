// Code generated by mockery v2.38.0. DO NOT EDIT.

package helpers

import (
	errors "hedge/common/errors"
	helpers "hedge/edge-ml-service/pkg/helpers"

	mock "github.com/stretchr/testify/mock"
)

// MockImageRegistryConfigInterface is an autogenerated mock type for the ImageRegistryConfigInterface type
type MockImageRegistryConfigInterface struct {
	mock.Mock
}

type MockImageRegistryConfigInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockImageRegistryConfigInterface) EXPECT() *MockImageRegistryConfigInterface_Expecter {
	return &MockImageRegistryConfigInterface_Expecter{mock: &_m.Mock}
}

// GetImageDigest provides a mock function with given fields: imagePath
func (_m *MockImageRegistryConfigInterface) GetImageDigest(imagePath string) (string, errors.HedgeError) {
	ret := _m.Called(imagePath)

	if len(ret) == 0 {
		panic("no return value specified for GetImageDigest")
	}

	var r0 string
	var r1 errors.HedgeError
	if rf, ok := ret.Get(0).(func(string) (string, errors.HedgeError)); ok {
		return rf(imagePath)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(imagePath)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) errors.HedgeError); ok {
		r1 = rf(imagePath)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(errors.HedgeError)
		}
	}

	return r0, r1
}

// MockImageRegistryConfigInterface_GetImageDigest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetImageDigest'
type MockImageRegistryConfigInterface_GetImageDigest_Call struct {
	*mock.Call
}

// GetImageDigest is a helper method to define mock.On call
//   - imagePath string
func (_e *MockImageRegistryConfigInterface_Expecter) GetImageDigest(imagePath interface{}) *MockImageRegistryConfigInterface_GetImageDigest_Call {
	return &MockImageRegistryConfigInterface_GetImageDigest_Call{Call: _e.mock.On("GetImageDigest", imagePath)}
}

func (_c *MockImageRegistryConfigInterface_GetImageDigest_Call) Run(run func(imagePath string)) *MockImageRegistryConfigInterface_GetImageDigest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockImageRegistryConfigInterface_GetImageDigest_Call) Return(_a0 string, _a1 errors.HedgeError) *MockImageRegistryConfigInterface_GetImageDigest_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockImageRegistryConfigInterface_GetImageDigest_Call) RunAndReturn(run func(string) (string, errors.HedgeError)) *MockImageRegistryConfigInterface_GetImageDigest_Call {
	_c.Call.Return(run)
	return _c
}

// GetRegistryCredentials provides a mock function with given fields:
func (_m *MockImageRegistryConfigInterface) GetRegistryCredentials() helpers.RegistryCredentials {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetRegistryCredentials")
	}

	var r0 helpers.RegistryCredentials
	if rf, ok := ret.Get(0).(func() helpers.RegistryCredentials); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(helpers.RegistryCredentials)
	}

	return r0
}

// MockImageRegistryConfigInterface_GetRegistryCredentials_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRegistryCredentials'
type MockImageRegistryConfigInterface_GetRegistryCredentials_Call struct {
	*mock.Call
}

// GetRegistryCredentials is a helper method to define mock.On call
func (_e *MockImageRegistryConfigInterface_Expecter) GetRegistryCredentials() *MockImageRegistryConfigInterface_GetRegistryCredentials_Call {
	return &MockImageRegistryConfigInterface_GetRegistryCredentials_Call{Call: _e.mock.On("GetRegistryCredentials")}
}

func (_c *MockImageRegistryConfigInterface_GetRegistryCredentials_Call) Run(run func()) *MockImageRegistryConfigInterface_GetRegistryCredentials_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockImageRegistryConfigInterface_GetRegistryCredentials_Call) Return(_a0 helpers.RegistryCredentials) *MockImageRegistryConfigInterface_GetRegistryCredentials_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockImageRegistryConfigInterface_GetRegistryCredentials_Call) RunAndReturn(run func() helpers.RegistryCredentials) *MockImageRegistryConfigInterface_GetRegistryCredentials_Call {
	_c.Call.Return(run)
	return _c
}

// LoadRegistryConfig provides a mock function with given fields:
func (_m *MockImageRegistryConfigInterface) LoadRegistryConfig() {
	_m.Called()
}

// MockImageRegistryConfigInterface_LoadRegistryConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadRegistryConfig'
type MockImageRegistryConfigInterface_LoadRegistryConfig_Call struct {
	*mock.Call
}

// LoadRegistryConfig is a helper method to define mock.On call
func (_e *MockImageRegistryConfigInterface_Expecter) LoadRegistryConfig() *MockImageRegistryConfigInterface_LoadRegistryConfig_Call {
	return &MockImageRegistryConfigInterface_LoadRegistryConfig_Call{Call: _e.mock.On("LoadRegistryConfig")}
}

func (_c *MockImageRegistryConfigInterface_LoadRegistryConfig_Call) Run(run func()) *MockImageRegistryConfigInterface_LoadRegistryConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockImageRegistryConfigInterface_LoadRegistryConfig_Call) Return() *MockImageRegistryConfigInterface_LoadRegistryConfig_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockImageRegistryConfigInterface_LoadRegistryConfig_Call) RunAndReturn(run func()) *MockImageRegistryConfigInterface_LoadRegistryConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockImageRegistryConfigInterface creates a new instance of MockImageRegistryConfigInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockImageRegistryConfigInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockImageRegistryConfigInterface {
	mock := &MockImageRegistryConfigInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
