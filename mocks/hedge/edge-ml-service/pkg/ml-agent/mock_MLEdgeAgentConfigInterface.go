// Code generated by mockery v2.38.0. DO NOT EDIT.

package ml_agent

import (
	interfaces "github.com/edgexfoundry/app-functions-sdk-go/v3/pkg/interfaces"

	mock "github.com/stretchr/testify/mock"
)

// MockMLEdgeAgentConfigInterface is an autogenerated mock type for the MLEdgeAgentConfigInterface type
type MockMLEdgeAgentConfigInterface struct {
	mock.Mock
}

type MockMLEdgeAgentConfigInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMLEdgeAgentConfigInterface) EXPECT() *MockMLEdgeAgentConfigInterface_Expecter {
	return &MockMLEdgeAgentConfigInterface_Expecter{mock: &_m.Mock}
}

// DeployInferenceImplementation provides a mock function with given fields: ctx, data
func (_m *MockMLEdgeAgentConfigInterface) DeployInferenceImplementation(ctx interfaces.AppFunctionContext, data interface{}) (bool, interface{}) {
	ret := _m.Called(ctx, data)

	if len(ret) == 0 {
		panic("no return value specified for DeployInferenceImplementation")
	}

	var r0 bool
	var r1 interface{}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) (bool, interface{})); ok {
		return rf(ctx, data)
	}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) bool); ok {
		r0 = rf(ctx, data)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(interfaces.AppFunctionContext, interface{}) interface{}); ok {
		r1 = rf(ctx, data)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(interface{})
		}
	}

	return r0, r1
}

// MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeployInferenceImplementation'
type MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call struct {
	*mock.Call
}

// DeployInferenceImplementation is a helper method to define mock.On call
//   - ctx interfaces.AppFunctionContext
//   - data interface{}
func (_e *MockMLEdgeAgentConfigInterface_Expecter) DeployInferenceImplementation(ctx interface{}, data interface{}) *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call {
	return &MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call{Call: _e.mock.On("DeployInferenceImplementation", ctx, data)}
}

func (_c *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call) Run(run func(ctx interfaces.AppFunctionContext, data interface{})) *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaces.AppFunctionContext), args[1].(interface{}))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call) Return(_a0 bool, _a1 interface{}) *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call) RunAndReturn(run func(interfaces.AppFunctionContext, interface{}) (bool, interface{})) *MockMLEdgeAgentConfigInterface_DeployInferenceImplementation_Call {
	_c.Call.Return(run)
	return _c
}

// DownloadModel provides a mock function with given fields: ctx, data
func (_m *MockMLEdgeAgentConfigInterface) DownloadModel(ctx interfaces.AppFunctionContext, data interface{}) (bool, interface{}) {
	ret := _m.Called(ctx, data)

	if len(ret) == 0 {
		panic("no return value specified for DownloadModel")
	}

	var r0 bool
	var r1 interface{}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) (bool, interface{})); ok {
		return rf(ctx, data)
	}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) bool); ok {
		r0 = rf(ctx, data)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(interfaces.AppFunctionContext, interface{}) interface{}); ok {
		r1 = rf(ctx, data)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(interface{})
		}
	}

	return r0, r1
}

// MockMLEdgeAgentConfigInterface_DownloadModel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DownloadModel'
type MockMLEdgeAgentConfigInterface_DownloadModel_Call struct {
	*mock.Call
}

// DownloadModel is a helper method to define mock.On call
//   - ctx interfaces.AppFunctionContext
//   - data interface{}
func (_e *MockMLEdgeAgentConfigInterface_Expecter) DownloadModel(ctx interface{}, data interface{}) *MockMLEdgeAgentConfigInterface_DownloadModel_Call {
	return &MockMLEdgeAgentConfigInterface_DownloadModel_Call{Call: _e.mock.On("DownloadModel", ctx, data)}
}

func (_c *MockMLEdgeAgentConfigInterface_DownloadModel_Call) Run(run func(ctx interfaces.AppFunctionContext, data interface{})) *MockMLEdgeAgentConfigInterface_DownloadModel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaces.AppFunctionContext), args[1].(interface{}))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_DownloadModel_Call) Return(_a0 bool, _a1 interface{}) *MockMLEdgeAgentConfigInterface_DownloadModel_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_DownloadModel_Call) RunAndReturn(run func(interfaces.AppFunctionContext, interface{}) (bool, interface{})) *MockMLEdgeAgentConfigInterface_DownloadModel_Call {
	_c.Call.Return(run)
	return _c
}

// ExecuteMLCommands provides a mock function with given fields: ctx, params
func (_m *MockMLEdgeAgentConfigInterface) ExecuteMLCommands(ctx interfaces.AppFunctionContext, params interface{}) (bool, interface{}) {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for ExecuteMLCommands")
	}

	var r0 bool
	var r1 interface{}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) (bool, interface{})); ok {
		return rf(ctx, params)
	}
	if rf, ok := ret.Get(0).(func(interfaces.AppFunctionContext, interface{}) bool); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(interfaces.AppFunctionContext, interface{}) interface{}); ok {
		r1 = rf(ctx, params)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(interface{})
		}
	}

	return r0, r1
}

// MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExecuteMLCommands'
type MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call struct {
	*mock.Call
}

// ExecuteMLCommands is a helper method to define mock.On call
//   - ctx interfaces.AppFunctionContext
//   - params interface{}
func (_e *MockMLEdgeAgentConfigInterface_Expecter) ExecuteMLCommands(ctx interface{}, params interface{}) *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call {
	return &MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call{Call: _e.mock.On("ExecuteMLCommands", ctx, params)}
}

func (_c *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call) Run(run func(ctx interfaces.AppFunctionContext, params interface{})) *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaces.AppFunctionContext), args[1].(interface{}))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call) Return(continuePipeline bool, result interface{}) *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call {
	_c.Call.Return(continuePipeline, result)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call) RunAndReturn(run func(interfaces.AppFunctionContext, interface{}) (bool, interface{})) *MockMLEdgeAgentConfigInterface_ExecuteMLCommands_Call {
	_c.Call.Return(run)
	return _c
}

// GetModelDeployTopic provides a mock function with given fields:
func (_m *MockMLEdgeAgentConfigInterface) GetModelDeployTopic() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetModelDeployTopic")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetModelDeployTopic'
type MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call struct {
	*mock.Call
}

// GetModelDeployTopic is a helper method to define mock.On call
func (_e *MockMLEdgeAgentConfigInterface_Expecter) GetModelDeployTopic() *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call {
	return &MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call{Call: _e.mock.On("GetModelDeployTopic")}
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call) Run(run func()) *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call) Return(_a0 string) *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call) RunAndReturn(run func() string) *MockMLEdgeAgentConfigInterface_GetModelDeployTopic_Call {
	_c.Call.Return(run)
	return _c
}

// GetModelDownloadEndpoint provides a mock function with given fields:
func (_m *MockMLEdgeAgentConfigInterface) GetModelDownloadEndpoint() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetModelDownloadEndpoint")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetModelDownloadEndpoint'
type MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call struct {
	*mock.Call
}

// GetModelDownloadEndpoint is a helper method to define mock.On call
func (_e *MockMLEdgeAgentConfigInterface_Expecter) GetModelDownloadEndpoint() *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call {
	return &MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call{Call: _e.mock.On("GetModelDownloadEndpoint")}
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call) Run(run func()) *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call) Return(_a0 string) *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call) RunAndReturn(run func() string) *MockMLEdgeAgentConfigInterface_GetModelDownloadEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// GetModelDownloadTopic provides a mock function with given fields:
func (_m *MockMLEdgeAgentConfigInterface) GetModelDownloadTopic() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetModelDownloadTopic")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetModelDownloadTopic'
type MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call struct {
	*mock.Call
}

// GetModelDownloadTopic is a helper method to define mock.On call
func (_e *MockMLEdgeAgentConfigInterface_Expecter) GetModelDownloadTopic() *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call {
	return &MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call{Call: _e.mock.On("GetModelDownloadTopic")}
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call) Run(run func()) *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call) Return(_a0 string) *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call) RunAndReturn(run func() string) *MockMLEdgeAgentConfigInterface_GetModelDownloadTopic_Call {
	_c.Call.Return(run)
	return _c
}

// GetReinitializeEndpoint provides a mock function with given fields:
func (_m *MockMLEdgeAgentConfigInterface) GetReinitializeEndpoint() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetReinitializeEndpoint")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetReinitializeEndpoint'
type MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call struct {
	*mock.Call
}

// GetReinitializeEndpoint is a helper method to define mock.On call
func (_e *MockMLEdgeAgentConfigInterface_Expecter) GetReinitializeEndpoint() *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call {
	return &MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call{Call: _e.mock.On("GetReinitializeEndpoint")}
}

func (_c *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call) Run(run func()) *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call) Return(_a0 string) *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call) RunAndReturn(run func() string) *MockMLEdgeAgentConfigInterface_GetReinitializeEndpoint_Call {
	_c.Call.Return(run)
	return _c
}

// LoadConfigurations provides a mock function with given fields: service
func (_m *MockMLEdgeAgentConfigInterface) LoadConfigurations(service interfaces.ApplicationService) {
	_m.Called(service)
}

// MockMLEdgeAgentConfigInterface_LoadConfigurations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadConfigurations'
type MockMLEdgeAgentConfigInterface_LoadConfigurations_Call struct {
	*mock.Call
}

// LoadConfigurations is a helper method to define mock.On call
//   - service interfaces.ApplicationService
func (_e *MockMLEdgeAgentConfigInterface_Expecter) LoadConfigurations(service interface{}) *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call {
	return &MockMLEdgeAgentConfigInterface_LoadConfigurations_Call{Call: _e.mock.On("LoadConfigurations", service)}
}

func (_c *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call) Run(run func(service interfaces.ApplicationService)) *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaces.ApplicationService))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call) Return() *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call) RunAndReturn(run func(interfaces.ApplicationService)) *MockMLEdgeAgentConfigInterface_LoadConfigurations_Call {
	_c.Call.Return(run)
	return _c
}

// SetDbClient provides a mock function with given fields: service
func (_m *MockMLEdgeAgentConfigInterface) SetDbClient(service interfaces.ApplicationService) {
	_m.Called(service)
}

// MockMLEdgeAgentConfigInterface_SetDbClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDbClient'
type MockMLEdgeAgentConfigInterface_SetDbClient_Call struct {
	*mock.Call
}

// SetDbClient is a helper method to define mock.On call
//   - service interfaces.ApplicationService
func (_e *MockMLEdgeAgentConfigInterface_Expecter) SetDbClient(service interface{}) *MockMLEdgeAgentConfigInterface_SetDbClient_Call {
	return &MockMLEdgeAgentConfigInterface_SetDbClient_Call{Call: _e.mock.On("SetDbClient", service)}
}

func (_c *MockMLEdgeAgentConfigInterface_SetDbClient_Call) Run(run func(service interfaces.ApplicationService)) *MockMLEdgeAgentConfigInterface_SetDbClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaces.ApplicationService))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_SetDbClient_Call) Return() *MockMLEdgeAgentConfigInterface_SetDbClient_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_SetDbClient_Call) RunAndReturn(run func(interfaces.ApplicationService)) *MockMLEdgeAgentConfigInterface_SetDbClient_Call {
	_c.Call.Return(run)
	return _c
}

// SetHttpSender provides a mock function with given fields: mlBrokerUrl
func (_m *MockMLEdgeAgentConfigInterface) SetHttpSender(mlBrokerUrl string) {
	_m.Called(mlBrokerUrl)
}

// MockMLEdgeAgentConfigInterface_SetHttpSender_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetHttpSender'
type MockMLEdgeAgentConfigInterface_SetHttpSender_Call struct {
	*mock.Call
}

// SetHttpSender is a helper method to define mock.On call
//   - mlBrokerUrl string
func (_e *MockMLEdgeAgentConfigInterface_Expecter) SetHttpSender(mlBrokerUrl interface{}) *MockMLEdgeAgentConfigInterface_SetHttpSender_Call {
	return &MockMLEdgeAgentConfigInterface_SetHttpSender_Call{Call: _e.mock.On("SetHttpSender", mlBrokerUrl)}
}

func (_c *MockMLEdgeAgentConfigInterface_SetHttpSender_Call) Run(run func(mlBrokerUrl string)) *MockMLEdgeAgentConfigInterface_SetHttpSender_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_SetHttpSender_Call) Return() *MockMLEdgeAgentConfigInterface_SetHttpSender_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMLEdgeAgentConfigInterface_SetHttpSender_Call) RunAndReturn(run func(string)) *MockMLEdgeAgentConfigInterface_SetHttpSender_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMLEdgeAgentConfigInterface creates a new instance of MockMLEdgeAgentConfigInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMLEdgeAgentConfigInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMLEdgeAgentConfigInterface {
	mock := &MockMLEdgeAgentConfigInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
