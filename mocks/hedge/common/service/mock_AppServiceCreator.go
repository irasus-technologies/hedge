// Code generated by mockery v2.38.0. DO NOT EDIT.

package service

import (
	interfaces "github.com/edgexfoundry/app-functions-sdk-go/v3/pkg/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// MockAppServiceCreator is an autogenerated mock type for the AppServiceCreator type
type MockAppServiceCreator struct {
	mock.Mock
}

type MockAppServiceCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAppServiceCreator) EXPECT() *MockAppServiceCreator_Expecter {
	return &MockAppServiceCreator_Expecter{mock: &_m.Mock}
}

// NewAppService provides a mock function with given fields: serviceKey
func (_m *MockAppServiceCreator) NewAppService(serviceKey string) (interfaces.ApplicationService, bool) {
	ret := _m.Called(serviceKey)

	if len(ret) == 0 {
		panic("no return value specified for NewAppService")
	}

	var r0 interfaces.ApplicationService
	var r1 bool
	if rf, ok := ret.Get(0).(func(string) (interfaces.ApplicationService, bool)); ok {
		return rf(serviceKey)
	}
	if rf, ok := ret.Get(0).(func(string) interfaces.ApplicationService); ok {
		r0 = rf(serviceKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.ApplicationService)
		}
	}

	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(serviceKey)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// MockAppServiceCreator_NewAppService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewAppService'
type MockAppServiceCreator_NewAppService_Call struct {
	*mock.Call
}

// NewAppService is a helper method to define mock.On call
//   - serviceKey string
func (_e *MockAppServiceCreator_Expecter) NewAppService(serviceKey interface{}) *MockAppServiceCreator_NewAppService_Call {
	return &MockAppServiceCreator_NewAppService_Call{Call: _e.mock.On("NewAppService", serviceKey)}
}

func (_c *MockAppServiceCreator_NewAppService_Call) Run(run func(serviceKey string)) *MockAppServiceCreator_NewAppService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockAppServiceCreator_NewAppService_Call) Return(_a0 interfaces.ApplicationService, _a1 bool) *MockAppServiceCreator_NewAppService_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAppServiceCreator_NewAppService_Call) RunAndReturn(run func(string) (interfaces.ApplicationService, bool)) *MockAppServiceCreator_NewAppService_Call {
	_c.Call.Return(run)
	return _c
}

// NewAppServiceWithTargetType provides a mock function with given fields: serviceKey, targetType
func (_m *MockAppServiceCreator) NewAppServiceWithTargetType(serviceKey string, targetType interface{}) (interfaces.ApplicationService, bool) {
	ret := _m.Called(serviceKey, targetType)

	if len(ret) == 0 {
		panic("no return value specified for NewAppServiceWithTargetType")
	}

	var r0 interfaces.ApplicationService
	var r1 bool
	if rf, ok := ret.Get(0).(func(string, interface{}) (interfaces.ApplicationService, bool)); ok {
		return rf(serviceKey, targetType)
	}
	if rf, ok := ret.Get(0).(func(string, interface{}) interfaces.ApplicationService); ok {
		r0 = rf(serviceKey, targetType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.ApplicationService)
		}
	}

	if rf, ok := ret.Get(1).(func(string, interface{}) bool); ok {
		r1 = rf(serviceKey, targetType)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// MockAppServiceCreator_NewAppServiceWithTargetType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewAppServiceWithTargetType'
type MockAppServiceCreator_NewAppServiceWithTargetType_Call struct {
	*mock.Call
}

// NewAppServiceWithTargetType is a helper method to define mock.On call
//   - serviceKey string
//   - targetType interface{}
func (_e *MockAppServiceCreator_Expecter) NewAppServiceWithTargetType(serviceKey interface{}, targetType interface{}) *MockAppServiceCreator_NewAppServiceWithTargetType_Call {
	return &MockAppServiceCreator_NewAppServiceWithTargetType_Call{Call: _e.mock.On("NewAppServiceWithTargetType", serviceKey, targetType)}
}

func (_c *MockAppServiceCreator_NewAppServiceWithTargetType_Call) Run(run func(serviceKey string, targetType interface{})) *MockAppServiceCreator_NewAppServiceWithTargetType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(interface{}))
	})
	return _c
}

func (_c *MockAppServiceCreator_NewAppServiceWithTargetType_Call) Return(_a0 interfaces.ApplicationService, _a1 bool) *MockAppServiceCreator_NewAppServiceWithTargetType_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAppServiceCreator_NewAppServiceWithTargetType_Call) RunAndReturn(run func(string, interface{}) (interfaces.ApplicationService, bool)) *MockAppServiceCreator_NewAppServiceWithTargetType_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAppServiceCreator creates a new instance of MockAppServiceCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAppServiceCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAppServiceCreator {
	mock := &MockAppServiceCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
