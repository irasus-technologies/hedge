name: Create docker images on PR merge

#on:
#    pull_request:
#      types: [opened, synchronize, reopened]
#  # Allows you to run this workflow manually from the Actions tab
#    workflow_dispatch:

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '.hashcache/**'  # Prevent commit loop
  push:
    branches:
      - main  # or your default branch name
    paths-ignore:
      - '.hashcache/**'  # Prevent commit loop
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  on-pr-merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
#      with:
#        submodules: recursive
#        fetch-depth: 0

    - name: Set up make
      run: sudo apt-get update && sudo apt-get install -y make

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub so the build step can push to docker registry
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # First generate combined hash before restoring cache
    - name: Compute combined hash key (before restore)
      id: hash
      run: |
        mkdir -p .hashcache  # in case it doesn't exist yet
        touch .hashcache/service-placeholder.hash  # dummy file if dir empty
        COMBINED_HASH=$(cat .hashcache/*.hash 2>/dev/null | sha256sum | cut -d ' ' -f1)
        echo "combined_hash=$COMBINED_HASH" >> "$GITHUB_OUTPUT"

    # Restore using the combined hash
    - name: Restore hashcache directory
      uses: actions/cache@v4
      with:
        path: .hashcache/
        key: hashcache-all-${{ steps.hash.outputs.combined_hash }}
        restore-keys: |
          hashcache-all-

    - name: Build docker images
      run: make docker SERVICE=app-services -e IMAGE_PUSH=true

    - name: Compute combined hash (after build)
      id: newhash
      run: |
        COMBINED_HASH=$(cat .hashcache/*.hash | sha256sum | cut -d ' ' -f1)
        echo "combined_hash=$COMBINED_HASH" >> "$GITHUB_OUTPUT"

    - name: Save updated cache
      uses: actions/cache@v4
      with:
        path: .hashcache/
        key: hashcache-all-${{ steps.newhash.outputs.combined_hash }}

#    - name: Commit updated hash files
#      run: |
#        git config user.name "GitHub Actions"
#        git config user.email "actions@github.com"
#
#        git add .hashcache/
#        if git diff --cached --quiet; then
#          echo "No changes to commit."
#        else
#          git commit -m "Update hashcache after build [skip ci]"
#            if [[ -n "${GITHUB_HEAD_REF}" ]]; then
#              git fetch origin "${GITHUB_HEAD_REF}"
#              git rebase origin/"${GITHUB_HEAD_REF}"
#              git push origin HEAD:"${GITHUB_HEAD_REF}"
#            else
#              git push origin HEAD:"${GITHUB_REF_NAME}"
#            fi
#        fi

#    - name: Push Docker image
#      run: |
#        IMAGE_NAME=bmchelix/hedge-device-virtual
#        docker tag hedge-device-virtual:latest $IMAGE_NAME:latest
#        docker push $IMAGE_NAME:latest



